{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//  необходимо найти селектор добавить слушателя \ndocument.querySelector('.form').addEventListener('submit', function(event) {\n    event.preventDefault();\n\n// Получаем значения и состояние \n    const delay = Number(event.target.elements.delay.value);\n    const state = event.target.elements.state.value;\n\n//  создаем Промисс и неоьходима проверка \n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n\n// Обработка результата промисса при помощи библиотеки ( необходимо чтоб выводилось уведомление )\n    promise\n        .then((result) => {\n            iziToast.success({\n                title: 'Success',\n                message: `Fulfilled promise in ${result}ms`\n            });\n    })\n        .catch((error) => {\n            iziToast.error({\n                title: 'Error',\n                message: `Rejected promise in ${error}ms`,\n            });\n        });\n});"],"names":["event","delay","state","resolve","reject","result","iziToast","error"],"mappings":"oGAIA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAASA,EAAO,CACvEA,EAAM,eAAc,EAGpB,MAAMC,EAAQ,OAAOD,EAAM,OAAO,SAAS,MAAM,KAAK,EAChDE,EAAQF,EAAM,OAAO,SAAS,MAAM,MAG1B,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTF,IAAU,YACVC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAII,KAAMI,GAAW,CACdC,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,wBAAwBD,CAAM,IACvD,CAAa,CACb,CAAK,EACI,MAAOE,GAAU,CACdD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBC,CAAK,IACrD,CAAa,CACb,CAAS,CACT,CAAC"}